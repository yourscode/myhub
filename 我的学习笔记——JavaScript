JavaScript书写格式
  1、行内样式：写在标签内部。
  2、内嵌样式（内联样式）：写在一对head标签中。
  3、外链样式：写在一个单独的.js文件中，再导入进来。

JavaScript书写格式注意点：
  1、不推荐直接将JavaScript代码书写到标签内部
  2、默认情况浏览器会从上至下解析网页，所以如果JavaScript代码写到一对head标签中，
  并且需要通过JavaScript代码操作界面上的元素，那么就不能直接书写JavaScript代码，否则无效
  2.1如果想将JavaScript代码写到一对head标签中，并且需要在JavaScript代码中操作界面上的元素，
  那么必须加上window.onload=function(){操作界面元素的JavaScript代码}
  2.2window.onload的含义：等到界面上所有的元素都加载完毕后再执行{}中的代码
  2.3由于默认情况下浏览器会从上至下解析网页，所以如果想通过JavaScript操作界面上的元素只需要等到元素被加载解析之后操作就可以了，
  所以我们还可以将JavaScript代码写到body结束标签的前面。
  2.4如果需要在一对script标签中编写JavaScript代码，那么就不能通过script标签再导入其他的文件否者书写的JavaScript代码无效
  
  JavaScript常见输出方式：
    1、通过弹窗的形式来输出
      alert（需要输出的内容）；
      confirm（需要输出的内容）；
      prompt（需要输出的内容）；
    注意点：
      如果需要输出内容不是数字，那么就必须通过单引号或者双引号括起来
      在JavaScript中时严格区分大小写的，alert（）和ALERT（）不是一回事
      在编写JavaScript代码的时候一定要记住每一句代码后面都要添加一个分号，并且这个分号是英文分号
      我们会发现有时候不写分号程序也能运行，这里并不是因为不需要分号，而是浏览器自动帮助我们添加了分号
      浏览器自动添加会消耗一定的性能，并且有可能会添加错误
    2、通过网页内容区域的形式来输出
      document.write(需要输出的内容)；
    注意点：如果需要输出的内容不是数字，那么就必须通过单引号或者双引号括起来
    3、通过开发者控制台的形式来输出
       console.log(需要输出的内容);     普通输出
       console.warn(需要输出的内容)；    警告输出
       console.error(需要输出的内容)；    错误输出
     注意点：
       如果需要输出的内容不是数字，那么就必须通过单引号或者双引号括起来
       
     什么是常量？
       常量表示一些固定不变的数据
       现实生活中人的性别其实就可以看作是常量，生下来是男孩一辈子都是男孩，生下来是女孩一辈子都是女孩
       JavaScript中常量的分类
         1、整型常量   其实就是正数。在JavaScript中随便写一个整数都是整型常量   1   /    666/   99
         2、实型常量    实型常量其实就是小数，在JavaScript中随便写一个小数都是实型常量    3.14/6.66
         3、字符串常量   字符串常量其实就是用单引号或者双引号括起来的内容，我们就称之为字符串常量   'a'  /   'abc'   /    "巴啦啦能量"
           注意点：无论是用单引号或者双引号括起来多少个字符，在JavaScript中都是字符串常量
         4、布尔常量     布尔常量其实就是真或者假，在JavaScript中通过true和false来表达，在JavaScript中布尔常量只有两个取值，真（true）或者假（false）
         5、自定义常量   在ES6新增的，const 常量名称=常量值;    const NUM=666;
         
注意点：在JavaScript中变量是可以相互赋值的，
        在JavaScript中如果定义了同名变量那么后面定义的变量会覆盖先定义的变量
        在老版本的标准的（ES6之前）Javascript中可以先使用变量，再定义变量，并不会报错
        由于JavaScript是一门解释型语言，会边解析边执行，浏览器在解析JavaScript代码之前还会
        进行一个操作“预解析（预处理）”
        预解析（预处理）步骤：将当前JavaScript代码中所有的变量的定义放到所有代码最前面
        例如：console.log(num);
              var num =123;
              预处理后：
              var = num;
              console.log(num);
              num = 123;
              
什么是关键字？
  被JavaScript语言赋予了特殊含义的单词
  关键字在开发工具中会显示特殊的颜色的
  关键字不能用做变量名称、函数名等
  关键字严格区分大小写，var和Var前者是关键字后者不是（只需要记住一点，在JavaScript中关键字都是小写的哦）
什么是保留字?
  javascript预留的关键字他们虽然现在不是关键字，但以后升级版本可能会作为关键字使用
  
  标识符明明规则（必须遵守）
    只能由26个英文字母大小写、10个阿拉伯数字0~9；下划线——；美元符号$；组成
    不能以数字开头
    严格区分大小写，比如test和Test是两个不同的标识符
    不可以使用关键字和保留字作为标识符
    JS底层保存的标识符时实际上是采用Unicode编码的 ，所以理论上讲所有的utf-8中含有的内容都可以作为标识符  例如：哈哈哈_text  就是合法的！
    标识符命名规范（建议遵守）
      见名知意：变量的名称要有意义（有利于提高可读性）
      驼峰命名法：首字母小写，从第二个单词开始首字母大写（有利于提高可读性）
      
**注意：    多行注释不能嵌套多注释


基本数据类型
  NUmber 数据类型
    在JavaScript中无论是整数还是小数都是属于数值类型的
  String 字符串类型
    在JavaScript中无论是通过单引号还是双引号括起来的内容都是属于字符串类型
  boolean 布尔类型
    在JavaScript中布尔类型比较特殊，只有两个取值true/false；
  Undefined 未定义类型
    在JavaScript中未定定义类型比较特殊，只有一个取值undefined
  Null 空类型
  引用数据类型
    object 对象类型
    
这次学习的数据类型和前面学习的常量之间的关系就是猫科动物和狮子老虎豹子之间的关系
今天学习的数据类型就是猫科动物，前面学习的常量就是狮子老虎豹子

将Number数据类型转换为字符串类型
将Boolean数据类型转换为字符串类型
将undefined数据类型转换为字符串类型
将null类型转换为字符串类型
在JavaScript中如果想将以上的四种数据类型转换为字符串类型常用的方法有三种
1、对于Number数据类型和Boolean类型来说，可以通过  变量名称.toString()   的方式来转换
2、可以通过  String（变量or常量）;   转换为字符串；
  在谷歌浏览器的控制台中如果是Number类型是蓝色的
  在谷歌浏览器的控制台中如果是String类型是灰色的 
  注意点：变量名称.toString();  是对拷贝的数据进行转换，所以不会影响到原有的数据
          不能使用常量直接调用toString方法，因为常量是不能改变的
  let value = undefined;
  let value1 = String(value);   代码的含义：根据传入的数据重新生成一个新的字符串 
  注意点：  变量名称.toString();   的方式前面不能是常量因为常量不能被改变
            String（变量or常量）   是根据传入的值重新生成一个新的值并不似修改原有的值
            复习




  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
