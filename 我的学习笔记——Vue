语法糖: 简写   v-on:click  =  @click
vscode  log = console.log();
hook : 钩子
那个两个  {{}}  的叫做Mustache语法  mustache 英文胡子/胡须
注意点: mustache语法是在content里面使用的
v-cloak 斗篷  在vue解析之前,div中有一个属性v-cloak,在vue解析之后,会把它删除
v-bind 的语法糖   : = v-bind   例如: <a :href="aHref">百度一下</a>
动态绑定的class如果再添加一个class的话那么会把两个里面用到的class进行合并
methods和computed看起来都可以实现我们的功能,那为什么要多一个计算属性的东西呢?
原因 : 计算属性会进行缓存,如果多次使用时,计算属性只会调用一次

建议在ES6开发中,优先使用const,只有需要在改变某个标志符的时候才使用let()
const注意点: 1, 一旦给const修饰的标识符给赋值之后,不能修改
              2,在使用const定义标志符,必须进行赋值
              3,常量的含义是指对象]不能修改,但是可以改变对象内部的属性
v-bind的语法糖是  :  
v-on  的语法糖是  @
在事件定义时,写方法时候省略了小括号,但是方法本身是需要参数的,这个时候Vue会将浏览器产生的event事件作为参数传入到方法中
方法定义时,我们需要event对象,同时又需要其他参数,在调用方法时,可以通过使用形参   $event  来手动获得浏览器参数event
v-if : 当条件为false的时候,包含v-if指令的元素,根本就不会存在dom中,
v-show : 当条件为false时,v-show只是给我们的元素添加行内元素display : none;
注意点: 当需要在显示隐藏之间切换频率很高的时候用v-show , 当只有一次切换的时候用v-if
splice作用: 删除元素/替换元素/插入元素
删除元素: 第二个参数传入你想要删除几个元素(如果没有传,就删除后面所有的元素)
替换元素: 第二个参数表示我们要替换元素的个数,后面适用于替换前面的元素
插入元素: 第二个参数传入0,并且跟上要插入的元素
注意点: 通过索引值修改数组中的元素  :   this.letters[0] = "bbbbb"; 不是响应式的
可以通过   splice(0,1"bbbbb") 达到相同的效果但是是响应式的  ,还有一种方式: set(要修改的对象,索引值,修改后的值)
Vue.set(this.letters,0,"bbbbb")
