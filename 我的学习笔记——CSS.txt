通过CSS来修改样式有什么好处？
  不用记忆哪些属性属于哪个标签，
  当需求变更时，我们不需要修改大量的代码就可以满足我们的需求
  在前端开发中CSS只有一个作用就是用来修改样式
  —规定文字样式的属性
  ——格式：font-style:itaic;       取值：   normal：正常，默认就是正常的   italic：倾斜的
  ——快捷键：   fs      font-style:italic;
                          fsn      font-style: normal;
  —规定文字粗细的属性
  ——格式：font-weight:bold;
  ——单词取值    bold    加粗。   bolder   比加粗还粗。   lighter   细线，默认就是细线
  —— 快捷键：fw   font-weight: ;
                        fwb      font-weight: bold;
                        fwbr     font-weight: bolder;
 数字取值：
 ——100-900之间的整百的数字
 —规定文字大小的属性
 ——格式：font-size:30px;
 单位：px（像素 pixel）
 注意点：通过font-size设置大小一定要带单位，也就是一定要写px
 快捷键：fz:         font-size: ;
               fz30        font-size: 30px;
 —规定文字字体属性
 格式：font-family: "楷体"；
 注意点：1、如果取值是中文，需要用双引号或者单引号括起来
                2、设置的字体必须是用户电脑里已经安装的字体
 ——快捷键：
                     ff          font-family:  ;     
                     
                     
                     
                     
如果设置的字体不存在，那么系统会使用默认的字体来显示----->宋体
——如果如果设置的字体不存在，而我们又不想用默认的字体来显示怎么办?
   可以给字体设置备选方案
   格式：font-family; "字体一"，"备选方案1"，"备选方案2" ，，，，;
——  如果给中文和英文分别单独设置字体，怎么办？
         但凡中文字体，里面都包含了英文
         但凡英文字体，里面都没有包含中文  ，也就是说中文字体可以处理英文而英文字体
         不可以处理中文，
         注意点：如果想给界面中的英文单独设置字体，那么英文的字体必须写在中文的前面
         
         补充：在企业开发中最常见的字体有以下几个
         中文：宋体/黑体/微软雅黑
         英文："Times New Roman"/"Arial"
         还需要知道一点，就是并不是名称是英文就一定是英文字体，因为中文字体其实都有自己的英文名称，所以是不是中文字体主要看能不能处理中文
         宋体：（SimSun）
         黑体：（SimHei）
         微软雅黑：（Microsoft YaHei）   
——缩写格式：
           font: style  weight size family;
例如： font :italic bold 10px "楷体";
注意点：
1、	在这种格式中有的属性可以省略：style可以省略，weight可以省略
2、	在这种缩写格式中style和weight的位置可以交换
3、	这种缩写格式中有的属性是不可以省略的：size不能省略，family不可以省略
4、	size和fam所有属性的最后ily的位置是不可以随便乱放的
size一定要写在family的前面，而且size和family必须写在

文本装饰的属性
格式:text-decoration: underline;
取值:     underline 下划线     line-through   删除线      overline 上划线    none 什么都没有, 最常见的用途就是用于去掉超链接的下划线
快捷键:       td  text-decoration: none;     tdu text-decoration: underline;
            tdl text-decoration: line-through;       tdo text-decoration: overline;
2.文本水平对齐的属性
格式: text-align: right;
取值:    left 左     right 右    center 中
快捷键：    ta text-align: left;    tar text-align: right;    tac text-align: center;
3.文本缩进的属性
格式: text-indent: 2em;
取值: 2em, 其中em是单位, 一个em代表缩进一个文字的宽度
快捷键   ti text-indent:;   ti2e text-indent: 2em;

在CSS中如何通过color属性来修改文字颜色
格式: color: 值;
取值:
1.1英文单词
一般情况下常见的颜色都有对应的英文单词, 但是英文单词能够表达的颜色是有限制的, 也就是说不是所有的颜色都能够通过英文单词来表达
1.2rgb  rgb其实就是三原色, 其中r(red 红色) g(green 绿色) b(blue 蓝色)
格式: rgb(0,0,0)
那么这个格式中的第一个数字就是用来设置三原色的光源元件红色显示的亮度，第二个数字就是用来设置三原色的光源元件绿色显示的亮度
第三个数字就是用来设置三原色的光源元件蓝色显示的亮度
这其中的每一个数字它的取值是0-255之前, 0代表不发光, 255代表发光, 值越大就越亮   红色: rgb(255,0,0);   绿色: rgb(0,255,0);
蓝色: rgb(0,0,255);   黑色: rgb(0,0,0);   白色: rgb(255,255,255);
在前端开发中其实并不常用黑色。只要让红色/绿色/蓝色的值都一样就是灰色，而且如果这三个值越小那么就越偏黑色, 越大就越偏白色
例如: color: rgb(200,200,200);
1.3rgba   rgba中的rgb和前面讲解的一样, 只不过多了一个a
那么这个a呢代表透明度, 取值是0-1, 取值越小就越透明   例如: color: rgba(255,0,0,0.2);
1.4十六进制   在前端开发中通过十六进制来表示颜色, 其实本质就是RGB
十六进制中是通过每两位表示一个颜色
例如: #FFEE00 FF表示R EE表示G 00表示B
1.5十六进制缩写    在CSS中只要十六进制的颜色每两位的值都是一样的, 那么就可以简写为一位
例如:    #FFEE00 == #FE0
注意点:   1.如果当前颜色对应的两位数字不一样, 那么就不能简写    #123456;
2.如果两位相同的数字不是属于同一个颜色的, 也不能简写    #122334

1.后代选择器和子元素选择器之间的区别?
1.1  后代选择器使用空格作为连接符号
子元素选择器使用>作为连接符号
1.2  后代选择器会选中指定标签中, 所有的特定后代标签, 也就是会选中儿子/孙子..., 只要是被放到指定标签中的特定标签都会被选中
子元素选择器只会选中指定标签中, 所有的特定的直接标签, 也就是只会选中特定的儿子标签
2.后代选择器和子元素选择器之间的共同点
2.1  后代选择器和子元素选择器都可以使用标签名称/id名称/class名称来作为选择器
2.2   后代选择器和子元素选择器都可以通过各自的连接符号一直延续下去
选择器1>选择器2>选择器3>选择器4{}
3.在企业开发中如何选择
如果想选中指定标签中的所有特定的标签, 那么就使用后代选择器
如果只想选中指定标签中的所有特定儿子标签, 那么就使用子元素选择器

1.什么是交集选择器?
作用: 给所有选择器选中的标签中, 相交的那部分标签设置属性

格式:
选择器1选择器2{
    属性: 值;
}
注意点:
1.选择器和选择器之间没有任何的连接符号
2.选择器可以使用标签名称/id名称/class名称
3.交集选择器仅仅作为了解, 企业开发中用的并不多

兄弟选择器
相邻兄弟选择器  CSS2里面推出的，
格式：
       选择器1+选择器2{
                      属性：值;
                      }
注意点：相邻兄弟选择器只能通过+号来连接，相邻兄弟选择器只能选中紧跟其后的那个标签，不能选中被隔开的标签。
—通用兄弟选择器   CSS3里面推出的
作用：给指定选择器后面的所有选择器选中的所有标签设置属性
格式：
     标签1~标签2{
                属性：值；
                }
注意点：通用兄弟选择器必须用~连接，通用兄弟选择器选中的是指定选择器后面某个选择器选中的所有标签，无论有没有被隔开都会被选中。

CSS3新增的选择器中最具代表性的就是序选择器
1、同级别的第几个
：first-child    选中同级别的的第一个标签     注意点：不区分类型。
：last-child     选中同级别的最后一个标签     注意点：不区分类型。
：nth-child（n）      选中同级别中的第n个标签      注意点：不区分类型。
：nth-last-child（n）   选中同级别中倒数第n个标签   注意点：不区分类型。
：only-child      选中父元素中唯一的元素
同类型的第几个
：first-of-type   选择中同级别中同类型的第一个标签
：last-of-type    选择中同级别中同类型的最后一个标签。
：nth-of-type（n）     选中同级别中同类型的第n个标签
：nth-last-of-type（n）   选中同级别中同类型的倒数第n个标签
：only-of-type     选中父元素中唯一类型的某个标签。

：nth-child（odd）   选中同级别中的所有奇数
：nth-child（even）  选中同级别中的所有偶数
：nth-child（xn+y）  x和y是用户自定义的，而n是一个计数器，从0开始递增（例如：p：nth-child（2n+0）当为0时选择第0个标签
                    但是第0个没有，所以当n为1的时候选中第二个标签 ）

什么是属性选择器？
作用：根据指定的属性名称找到对应的标签，然后设置属性。
[attribute]     作用：根据指定的属性名称找到对应的标签，然后设置属性
例如：        p[id]{
            color: #ff0000;
                   }
[attribute=value]  作用：找到有指定属性，并且属性的取值等于value的标签，然后设置属性，最常见的应用场景
                         就是用于区分input属性
              例如：        p[class=cc]{
                                          color: #666666;
                                          font-size: 50px;
                                       }
                           input[type=password]{}
                           <input type="text" name="" id="">
                           <input type="password" name="" id="">
   
   属性的取值是以什么开头的    (只需掌握CSS3推出的就行CSS2推出的只需了解一下哦~)
   [attribute|=value]   CSS2
   [attribute^=value]   CSS3
   两者之间的区别：
      CSS2中的只能找到value开头，并且value是被-和其他内容隔开的
      CSS3中的只要是以value开头的都可以找到，无论有没有被隔开
   
   属性的取值是以什么结尾的
   [attribute$=value]   CSS3
   
   属性的取值是否包含某个特定的值
   [attribute~=value]   CSS2
   [attribute*=value]   CSS3
   两者之间的区别：
   CSS2中的只能找到独立的单词，也就是包含value，并且value是被空格隔开的
   CSS3中的只要包含value就可以找到
   
   通配符选择器
   作用：给当前界面所有标签设置属性。
   格式：
               *{
                      属性：值；
                }
    注意点：由于通配符选择器设置界面上所有标签的属性，所以在设置之前会遍历所有标签，如果当前界面上标签较多
            那么性能就会比较差，所以在企业开发中一般不会使用通配符选择器。

什么是继承性？    作用：给父元素设置一些属性，子元素也可以使用，这个我们称之为继承性
注意点：   1、并不是所有属性都可以继承，只有以color/font-/text-/line开头的属性才可以继承
          2、在CSS的继承中不仅仅是儿子可以继承，只要是后代都可以继承   
继承性中的特殊性：     a标签的文字颜色和下划线是不能继承的     h标签文字大小是不能继承的
在企业开发中应用的场景：
一般用于设置网页上的一些共性信息，例如网页的文字颜色、字体大小等内容。
格式：body{}

什么是层叠性？      作用：层叠性就是CSS处理冲突的一种能力
注意点： 层叠性只有在多个选择器选中“同一个标签“然后又设置了“相同的属性”，才会发生层叠性                     
CSS全称：    Cascading StyleSheet        cascading（层叠）

什么是优先级？    作用：当多个选择器选中同一个标签，并且给同一个标签设置相同属性时，如何层叠就由优先级来确定
优先级判断的三种方式
是否是直接选中：（间接选中就是指继承）     如果是间接选中，那么就是谁离目标标签近就听谁的
是否是相同的选择器：   如果都是直接选中，并且都是同类型的选择器，那么谁写在后面就听谁的
不同选择器：   如果都是直接选中，并且不是想同类型的选择器，那么就会按照选择器的优先级别来进行层叠
              id>类>标签>通配符>继承>浏览器默认
什么是!important    作用：用于提升某个直接选中标签中的某个属性的优先级的，可以将被指定的属性的优先级提升为最高。
注意点：    important只能用于直接选中，不能用于间接选中  通配符选择器选中的标签也是直接选中的   
           !important只能提升被指定的属性的优先级，其他的属性的优先级不会被提升      !important必须写在属性值的分号前面
           !important前面的感叹号不能省略
什么是优先级权重？      作用:当多个选择器混合在一起使用时，我们可以通过计算权重来判断谁的优先级最高
权重计算规则    首先计算选择器中有多少个id、id多的选择器优先级高  
               如果id的个数一样，那么再看类名的个数，类名个数多的优先级最高
               如果类名的个数一样，那么再看标签名称个数，标签名称个数多的优先级最高
               如果id个数一样，类名个数也一样，标签名称个数也一样，那么就不会往下计算了，那么此时谁写在后面听谁的
               也就是说优先级如果一样，那么谁写在后面听谁的。
注意点：    只有选择器是直接选中标签的才需要计算权重      否则一定会听直接选中的选择器的

什么是div？   作用：一般用于配合CSS完成网页的基本布局
什么是span？  作用：一般用于配合CSS修改网页中的一些局部信息
div和span有什么区别？     div会独占一行，而span不会独占一行    div是一个容器级别的标签而span是文本级别的标签
容器级别的标签和文本级别的标签的区别？    容器级别的标签中可以嵌套其他所有的标签，文本级别的标签中只能嵌套文字/图片/超链接
容器级别的标签:   div h ul dl li dt dd ...
文本级别的标签：  span p buis strong em ins del ...
注意点：  哪些是文本级别的哪些是容器级别的，我们不用去记忆，在企业开发中一般情况下要嵌套一般都是嵌套在div中，或者按照组标签来嵌套

在HTML中HTML将所有的标签分为两类，分别是容器级和文本级  在CSS中CSS也将所有的标签分为两类，分别是块级元素和行内元素
什么是块级元素？什么是行内元素？      块级元素会独占一行 
容器级的标签：   div h ol dl li dt dd ...
文本级的标签：   span p buis strong em ins del ...
块级元素：   p div h ol dl li dt dd 
行内元素：   span buis strong em ins del 
块级元素和行内元素的区别？
块级元素：   独占一行    如果没有设置宽度，那么和父元素一样宽   如果设置了那么按照设置的来显示
行内元素：   不会独占一行    如果没有设置宽度那么默认和内容一样宽   行内元素是不可以设置宽度和高度的
行内块级元素：  为了让元素既能不独占一行又能设置宽度和高度，那么就出现了行内块级元素 
 
如何转换CSS元素的显示模式？    设置元素的display属性
display取值：   block块级     inline 行内    inline-block   行内块级
快捷键：di：   display inline     db：    display：block    dib：    display：inlin-block

如何设置标签的背景颜色？
在CSS中有一个background-color:属性，就是专门用来设置毕标签的背景颜色的
取值：  具体单词   rgb   rgba   十六进制 
快捷键：bc：   background-color:#fff

如何设置背景图片？   在CSS中有一个叫做background-image:url();的属性，就是专门用于设置背景图片的
                   快捷键：bi    background-image: url();
注意点：图片的地址必须放在url()中，图片的地址可以是本地的地址也可以是网络的地址
       如果图片的大小没有标签的大小大，那么会自动在水平和垂直方向上平铺和填充
       如果网页上出现了图片，那么浏览器会再次发送请求获取图片
       
如何控制背景图片的平铺方式？
在CSS中有一个background-repeat属性，就是专门用于控制背景图片的平铺方式的
取值： repeat 默认，在水平和垂直都需要平铺    no-repeat  在水平和垂直方向都不需要平铺
      repeat-x  只在水平方向平铺    repeat-y只在垂直方向上平铺
应用场景：可以通过背景图片的平铺来降低图片的大小，提升网页的访问速度

同一个标签可以设置背景颜色和背景图片，如果颜色和图片同时存在，那么图片会覆盖颜色。
如何控制背景图片的位置？ 在CSS中有一个叫做background-position：属性，就是专门用来控制背景图片的位置的
格式：    background-position：水平方向  垂直方向的；    记住一定要写单位也就是一定要写px
快捷键：  bp     background-position: 0 0;
取值：  具体的方位名词    水平方向：  left   center   right
                        垂直方向：   top   center    bottom                 
       具体的像素     例如：background-position：100px 200px；
                           记住一定要带单位，记住具体的像素也是可以接收负数的
                           
发现快捷键：   按住Ctrl+有>和.的那个键可以把一个标签缩起来，再按一下就可以打开。 

背景属性缩写格式：
           background： 背景颜色   背景图片  平铺方式  关联方式   定位方式 ；
注意点：background属性中，任何一个属性都可以被省略
什么是背景关联方式    默认情况下背景图片会随着滚动条的滚动而滚动，如果不想让背景图片随着滚动条的滚动而滚动，
                    那么我们可以修改背景图片和滚动条的关联方式
如何修改背景关联方式？   在CSS中有一个叫做background-attachment的属性，这个属性专门用来修改关联方式的
       格式：    background-attachment：scrool；
取值：    scroll  默认值，会随着滚动条的滚动而滚动    fixed    不会随着滚动条的滚动而滚动
   
   
   
   
   
   
   
   

 












