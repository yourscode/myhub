创建默认对象:
   1.JavaScript中提供了一个默认的类Object,我们可以通过这个类来创建对象
   2.由于我们是使用系统默认的类创建对象,所以系统不知道我们想要什么属性和行为,所以我们必须手动添加我们想要的属性和行为
   3.如何给一个对象添加属性:    对象名称.属性名称 = 值;
   4.如何给一个对象添加行为:    对象名称.行为名称 = 函数
在第三种格式中: 注意点: 属性名称和取值之间用冒号隔开,属性与属性之间用逗号隔开
什么是函数? 
  函数是没有和其他类显示的绑定在一起的,我们就称之为函数
什么是方法?
  方法就是显示的和其他的类显示的绑定在一起的,我们就称之为方法
函数和方法的区别: 1.函数可以直接调用,但是方法不可以直接调用,只能通过类来调用
                 2.函数内部的this输出的是window,方法内部的this输出的是当前调用的那个对象
注意: 无论是方法还是对象,内部都有一个叫做this的东东.
  this是什么?    谁调用了当前的函数或者方法,那么当前的this就是谁
  
什么是工厂函数?  
  工厂函数就是专门用来创建对象的函数,我们就称之为工厂函数
什么是构造函数?
  构造函数和工厂函数一样都是专门用于创建对象的,构造函数本质上是工厂函数的简写
构造函数和工厂函数的区别
  1.构造函数的函数名称首字母必须大写
  2.构造函数只能通过new来调用
当我们new Person("hzh",22);系统做了什么事?
  1.会在构造函数中自动创建一个对象
  2.会自动将刚刚创建的对象赋值给this
  3.会在构造函数的最后面添加return this;

通过三个等号来判断两个函数的名称,表示两个函数是否都存储在同一个函数当中
注意点: 由于两个对象中的say方法 实现的都是一样的,但是保存到了不同的存储空间中,所以有性能问题

prototype的特点:
  1.存储在prototype中的方法可以被对应构造函数创建出来的所有对象共享
  2.prototype中除了可以存储方法以外,还可存储属性
  3.prototype如果出现了和构造函数中同名的属性或者方法,对象在访问的时候,访问到的是构造函数中的方法或者属性.
prototype应用场景
  prototype中一般情况下用于存储所有对象都相同的一些属性以及方法,如果是对象特有的属性或者方法,我们会存储到构造函数中
